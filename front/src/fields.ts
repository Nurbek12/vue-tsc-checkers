interface Field {
  c: string,
  i: number,
  d?: boolean | undefined
}

export default [
    {
        "c": "n",
        "i": 0,
    },
    {
        "c": "w",
        "i": 1,
    },
    {
        "c": "n",
        "i": 2
    },
    {
        "c": "w",
        "i": 3
    },
    {
        "c": "n",
        "i": 4
    },
    {
        "c": "w",
        "i": 5
    },
    {
        "c": "n",
        "i": 6
    },
    { // w
        "c": "w",
        "i": 7
    },
    { // w
        "c": "w",
        "i": 8
    },
    {
        "c": "n",
        "i": 9
    },
    {
        "c": "w",
        "i": 10
    },
    {
        "c": "n",
        "i": 11
    },
    {
        "c": "w",
        "i": 12
    },
    {
        "c": "n",
        "i": 13
    },
    {
        "c": "w",
        "i": 14
    },
    {
        "c": "n",
        "i": 15
    },
    {
        "c": "n",
        "i": 16
    },
    {
        "c": "w",
        "i": 17
    },
    {
        "c": "n",
        "i": 18
    },
    {
        "c": "w",
        "i": 19
    },
    {
        "c": "n",
        "i": 20
    },
    {
        "c": "w",
        "i": 21
    },
    {
        "c": "n",
        "i": 22
    },
    {
        "c": "w",
        "i": 23,
    },
    {
        "c": "v",
        "i": 24
    },
    {
        "c": "n",
        "i": 25
    },
    {
        "c": "v",
        "i": 26
    },
    {
        "c": "n",
        "i": 27
    },
    {
        "c": "v",
        "i": 28
    },
    {
        "c": "n",
        "i": 29
    },
    {
        "c": "v",
        "i": 30
    },
    {
        "c": "n",
        "i": 31
    },
    {
        "c": "n",
        "i": 32
    },
    {
        "c": "v",
        "i": 33
    },
    {
        "c": "n",
        "i": 34
    },
    {
        "c": "v",
        "i": 35,
    },
    {
        "c": "n",
        "i": 36
    },
    {
        "c": "v",
        "i": 37
    },
    {
        "c": "n",
        "i": 38
    },
    {
        "c": "v",
        "i": 39
    },
    {
        "c": "b",
        "i": 40
    },
    {
        "c": "n",
        "i": 41
    },
    {
        "c": "b",
        "i": 42
    },
    {
        "c": "n",
        "i": 43
    },
    {
        "c": "b",
        "i": 44
    },
    {
        "c": "n",
        "i": 45
    },
    {
        "c": "b",
        "i": 46,
    },
    {
        "c": "n",
        "i": 47
    },
    {
        "c": "n",
        "i": 48
    },
    {
        "c": "b",
        "i": 49
    },
    {
        "c": "n",
        "i": 50
    },
    {
        "c": "b",
        "i": 51
    },
    {
        "c": "n",
        "i": 52
    },
    {
        "c": "b",
        "i": 53
    },
    {
        "c": "n",
        "i": 54
    },
    {
        "c": "b",
        "i": 55
    },
    { // b
        "c": "b",
        "i": 56
    },
    {
        "c": "n",
        "i": 57
    },
    {
        "c": "b",
        "i": 58
    },
    {
        "c": "n",
        "i": 59
    },
    {
        "c": "b",
        "i": 60
    },
    {
        "c": "n",
        "i": 61
    },
    {
        "c": "b",
        "i": 62
    },
    {
        "c": "n",
        "i": 63
    }
] as Field[]

// let arr: string[] = [
//   "n",
//   "w",
//   "n",
//   "w",
//   "n",
//   "w",
//   "n",
//   "w",

//   "w",
//   "n",
//   "w",
//   "n",
//   "w",
//   "n",
//   "w",
//   "n",
//   "n",
//   "w",
//   "n",
//   "w",
//   "n",
//   "w",
//   "n",
//   "w",
//   "v",
//   "n",
//   "v",
//   "n",
//   "v",
//   "n",
//   "v",
//   "n",

//   "n",
//   "v",
//   "n",
//   "v",
//   "n",
//   "v",
//   "n",
//   "v",
//   "b",
//   "n",
//   "b",
//   "n",
//   "b",
//   "n",
//   "b",
//   "n",
//   "n",
//   "b",
//   "n",
//   "b",
//   "n",
//   "b",
//   "n",
//   "b",
//   "b",
//   "n",
//   "b",
//   "n",
//   "b",
//   "n",
//   "b",
//   "n",
// ]


// function create(): Field[]{
//   // let array: Field[] = []
//   // for(var i:number=0; i<arr.length;i++) array.push({ c: arr[i], i })
//   // return array
//   return new Array(64).fill(null).map((_, i) => ({c: [
//     "n",
//     "w",
//     "n",
//     "w",
//     "n",
//     "w",
//     "n",
//     "w",
  
//     "w",
//     "n",
//     "w",
//     "n",
//     "w",
//     "n",
//     "w",
//     "n",
//     "n",
//     "w",
//     "n",
//     "w",
//     "n",
//     "w",
//     "n",
//     "w",
//     "v",
//     "n",
//     "v",
//     "n",
//     "v",
//     "n",
//     "v",
//     "n",
  
//     "n",
//     "v",
//     "n",
//     "v",
//     "n",
//     "v",
//     "n",
//     "v",
//     "b",
//     "n",
//     "b",
//     "n",
//     "b",
//     "n",
//     "b",
//     "n",
//     "n",
//     "b",
//     "n",
//     "b",
//     "n",
//     "b",
//     "n",
//     "b",
//     "b",
//     "n",
//     "b",
//     "n",
//     "b",
//     "n",
//     "b",
//     "n",
//   ][i], i}))
// }

// console.log(create());
